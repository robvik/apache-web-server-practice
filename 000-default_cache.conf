<VirtualHost *:80>

	# Enable caching
	# Requires cache and cache_disk modules:
	# "sudo a2enmod cache" and "sudo a2enmod cache_disk"
	# Parameter 1: disk refers to store cache on disk
	# Parameter 2: / refers to what url-depth to store cache (root url in this case)
	CacheEnable disk /

	# Set the cache store directory, where all cached content will be saved.
	# Requires cache and cache_disk modules:
	# "sudo a2enmod cache" and "sudo a2enmod cache_disk"
	# The mod_cache_disk folder should exist by default.
	# The mod_mem_cache setting can be used if you want to store cache in memory
	# The mod_file_cache setting can be used if you want to store cache in a file
	CacheRoot /var/cache/apache2/mod_cache_disk

	# CacheDirLevels and CacheDirLength determine the caching structure within
	# the cache root. Each cached element is hashed by it's URL, and then the
	# hash is used as a filename and directory path.
	#
	# The result of CacheDirLevels * CacheDirLength must not be higher than 20.
	# Moreover, pay attention on file system limits. Some file systems do not
	# support more than a certain number of inodes and subdirectories (e.g.
	# 32000 for ext3)

	# Set how many directories to create from the hash string 
	CacheDirLevels 3

	# Set ow many characters are in each directory name
	CacheDirLength 2

	# Set default expire date relative to original request date (in seconds) if
	# neither the Expires nor the Last-Modified headers are set on the content
	CacheDefaultExpire 3600

	# Set the max amount of time (in seconds) that cache will be saved
	CacheMaxExpire 86400

	# Set the minimum size, in bytes, for a document to be considered for storage
	# in the cache.
	CacheMinFileSize 64

	# Set the maximum size, in bytes, for a document to be considered for storage
	# in the cache.
	CacheMaxFileSize 1000000

	# Create an expiration date if it has a Last-Modified date, but no expiration
	# The factor is multiplied by the time to set a reasonable expiration date
	CacheLastModifiedFactor 0.5

	# UseCanonicalName can dramatically improve the ratio of cache hits because the
	# hostname of the virtual-host serving the content will form a part of the cache
	# key. This setting will not produce different cached entities if you use multiple
	# servers. Instead the content will be cached as per the canonical hostname
	UseCanonicalName On

	# Turning this off enables the administrator to insert a CACHE filter at a point
	# in the filter stack chosen by the administrator. This provides the opportunity
	# to cache content before that content is personalised by the mod_include filter,
	# or optionally compressed by the mod_deflate filter.
	CacheQuickHandler Off

	# Enable cache lock for given URL space
	CacheLock On

	# Defines the directory in which cache locks are created. Locks consist of empty
	# files that only exist for stale URLs in flight, so is significantly less 
	# resource intensive than the traditional disk cache
	CacheLockPath /tmp/mod_cache-lock

	# Maximum age (in seconds) of any cache lock
	CacheLockMaxAge 5

	# Add X-Cache header to response with cache status (HIT/MISS/REVALIDATE)	
	CacheHeader On

	# Cache documents even if the "Last-Modified Date" header is missing
	CacheIgnoreNoLastMod On

	# Ordinary requests containing a "Cache-Control: no-cache" or "Pragma: no cache"
	# header values will not be cached. This directive allows this behavior to be
	# overriden and save it to cache anyway.
	CacheIgnoreCacheControl On

	# Specifies HTTP headers that should not to be stored in the cache. For example,
	# it makes sense in some cases to prevent cookies from being stored in the cache
	# since most times cookies are sent from the browser to the server on each request.
	CacheIgnoreHeaders Set-Cookie
	
	# Unset headers from upstream server
	# Requires headers module: "sudo a2enmod headers"
	# Sometimes the upstream server will have a cahcing strategy of their own.
	# Apache will not cache objects that already have "Cache-Control" or "Expires"
	# headers set by the upstream server. To ensure these objects are cached anyways,
	# ignore the upstream caching headers with below configuration:
	Header unset Expires
	Header unset Cache-Control
	Header unset Pragma

	# Set expiration headers for static content
	# Requires expires module: "sudo a2enmod expires"
	ExpiresActive On
	ExpiresDefault "access plus 1 day"
	ExpiresByType text/html "access plus 1 years"
	ExpiresByType image/jpg "access plus 5 days"
        ExpiresByType image/jpeg "access plus 5 days"
        ExpiresByType image/gif "access plus 5 days"
        ExpiresByType image/png "access plus 5 days"
        ExpiresByType text/css "access plus 1 month"
        ExpiresByType application/pdf "access plus 1 month"
	ExpiresByType application/javascript "access plus 1 month"
        ExpiresByType text/x-javascript "access plus 1 month"
        ExpiresByType application/x-shockwave-flash "access plus 1 month"
        ExpiresByType image/x-icon "access plus 1 year"

	# Do not cache requests to the REST API (example)
	<LocationMatch "^/api/v1/$">
		CacheDisable On
	</LocationMatch>

</VirtualHost>